
from dotenv import load_dotenv
load_dotenv()

from openai import OpenAI
import streamlit as st
import tempfile
import os
from pathlib import Path

# --- AUTENTICACI√ìN SIMPLE ---
PASSWORD = "SECRETMEDIA"
if "authenticated" not in st.session_state:
    st.session_state.authenticated = False

if not st.session_state.authenticated:
    pw = st.text_input("Introduce la contrase√±a para acceder", type="password")
    if pw == PASSWORD:
        st.session_state.authenticated = True
        st.rerun()
    else:
        st.stop()

client = OpenAI()

# --- ASOCIACI√ìN DE PROMPTS POR SITE ---
PROMPTS = {
    "Valencia Secreta": """Eres un redactor especializado en planes y cosas que hacer en Valencia, con muchos a√±os de experiencia y has visitado todos los lugares de moda en la ciudad, se te da muy bien hacer recomendaciones de qu√© visitar y dar contexto sobre los sitios que recomiendas.

Mira, aqu√≠ puedes ver en detalle c√≥mo escribes normalmente tus art√≠culos, analiza el texto completo para coger puntos clave acerca de tu escritura (y tambi√©n tenlo en cuenta para adaptarte al estilo del medio a la hora de maquetar los textos): https://valenciasecreta.com/

Tu tarea va a ser escribir art√≠culos originales en base a unas transcripciones de v√≠deos que te voy a pasar. Van a ser transcripciones cortas, as√≠ que tendr√°s que escribir de forma creativa (sin resultar aburrida ni dar demasiadas vueltas para decir algo que se puede contar en pocas palabras), conviene adem√°s que des contexto a los datos que menciones en el art√≠culo para que as√≠ sea m√°s extenso, el art√≠culo deber√° tener m√°s de 400 palabras""",

    "Barcelona Secreta": """Eres un redactor especializado en planes y cosas que hacer en Barcelona, con muchos a√±os de experiencia y has visitado todos los lugares de moda en la ciudad, se te da muy bien hacer recomendaciones de qu√© visitar y dar contexto sobre los sitios que recomiendas.

Mira, aqu√≠ puedes ver en detalle c√≥mo escribes normalmente tus art√≠culos, analiza el texto completo para coger puntos clave acerca de tu escritura (y tambi√©n tenlo en cuenta para adaptarte al estilo del medio a la hora de maquetar los textos): https://barcelonasecreta.com/

Tu tarea va a ser escribir art√≠culos originales en base a unas transcripciones de v√≠deos que te voy a pasar. Van a ser transcripciones cortas, as√≠ que tendr√°s que escribir de forma creativa (sin resultar aburrida ni dar demasiadas vueltas para decir algo que se puede contar en pocas palabras), conviene adem√°s que des contexto a los datos que menciones en el art√≠culo para que as√≠ sea m√°s extenso, el art√≠culo deber√° tener m√°s de 400 palabras"""
}

# --- CONFIGURACI√ìN INICIAL ---
st.set_page_config(page_title="Convertir v√≠deo en texto")
st.title("üìù Conversor de v√≠deo a texto para SMN")

# --- INTERFAZ PROGRESIVA POR ETAPAS ---
video_file = st.file_uploader("Sube un v√≠deo (.mp4, .mov, .avi...):", type=None)

if video_file:
    st.session_state.video_uploaded = True
else:
    st.stop()

if st.session_state.get("video_uploaded"):
    site = st.selectbox("¬øPara qu√© site es este art√≠culo?", ["Selecciona...", *PROMPTS.keys()])
    if site != "Selecciona...":
        extra_prompt = st.text_area("¬øQuieres a√±adir instrucciones adicionales al prompt? (opcional)")

        if st.button("ü™Ñ Generar art√≠culo"):
            with tempfile.NamedTemporaryFile(delete=False, suffix=Path(video_file.name).suffix) as tmp:
                tmp.write(video_file.read())
                tmp_path = tmp.name

            with st.spinner("‚è≥ Transcribiendo v√≠deo con Whisper..."):
                with open(tmp_path, "rb") as audio_file:
                    transcript_response = client.audio.transcriptions.create(
                        model="whisper-1",
                        file=audio_file
                    )
                transcription = transcript_response.text

            st.success("‚úÖ Transcripci√≥n completada")
            st.text_area("Texto transcrito:", transcription, height=200)

            full_prompt = PROMPTS[site] + "\n\nTranscripci√≥n:\n" + transcription
            if extra_prompt:
                full_prompt += "\n\nInstrucciones adicionales del editor:\n" + extra_prompt

            with st.spinner("üß† Generando art√≠culo con ChatGPT..."):
                chat_response = client.chat.completions.create(
                    model="gpt-4",
                    messages=[
                        {"role": "system", "content": "Eres un redactor profesional especializado en contenido local."},
                        {"role": "user", "content": full_prompt}
                    ],
                    temperature=0.7
                )
                article = chat_response.choices[0].message.content

            st.success("‚úÖ Art√≠culo generado")
            st.subheader("üîé Vista previa del art√≠culo")
            st.markdown(article, unsafe_allow_html=True)

            st.subheader("üìã C√≥digo Markdown")
            st.code(article)

            st.download_button("‚¨áÔ∏è Descargar como HTML", data=article, file_name="articulo.html", mime="text/html")
            st.button("üìã Copiar art√≠culo", on_click=lambda: st.toast("Texto copiado (usa Ctrl+C en el √°rea Markdown)", icon="‚úÖ"))

            os.remove(tmp_path)
